% Generated by roxygen2 (4.0.2): do not edit by hand
\name{file.param}
\alias{file.param}
\title{file.param}
\usage{
file.param(..., template.uri = NULL, dependent.params = NULL)
}
\arguments{
\item{...}{Pass through to \code{\link{simple.param}}, including at least "name" but not including "type".}

\item{template.uri}{URI, possibly with :-prefixed parameter names. For example "/get?x=:x;y=:y" has parameters "x" and "y". (See \code{dependent.params} next).
(Note: this follows the way of doing it in combobox.param). This is optional. If provided, then the front-end can use this callback to allow the user to
download a template. This is a template in two senses: the URI itself may be a template whose parameter values should be filled in, and the return value
of the request is an excel file which is a template for the user to fill in.}

\item{dependent.params}{A character vector whose names are parameters from the uri, and whose values are the names of other form elements. Error to provide
this without providing template.uri}
}
\value{
An \code{AnalysisPageParam}
}
\description{
Build a file upload AnalysisPageParam
}
\details{
Build a file upload \code{AnalysisPageParam}. This is rendered as a file upload element, to be uploaded along with the submission.
(Currently there is no server-side mechanism for storing uploaded files, so asynchronous upload is not possible.)
The description field should describe what type of file is expected.

On the server side
your handler will get a list with "name", "tmp_name" and "fh"
elements giving the filename, and path to a local file (usually in /tmp), and the filehandle open for reading.
}
\examples{
cov.param <- file.param("cov", label="Covariate Data", description="A two-column Excel file, first column being the sample ID (SAMID) and second being covariate data (with the name of the variable in the header)")
}
\author{
Brad Friedman
}

